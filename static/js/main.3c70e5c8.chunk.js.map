{"version":3,"sources":["utils/date-prettier.tsx","components/FormattedEvents.tsx","utils/hour-filter.tsx","components/Filters.tsx","pages/AllEvents.tsx","pages/MyEvents.tsx","components/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["datePrettier","date","concat","getDay","getDate","getMonth","FormattedEvents","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setCityEvent","bind","assertThisInitialized","getEventsDays","setEventDuration","dateMeasure","_this2","dict","events","forEach","event","startDate","Date","dictKey","getFullYear","dateFormatted","id","date_formatted","full_date","city","name","duration","push","sortData","cities","find","endDate","getTime","_this3","items","keys","map","key","dayEvent","sortEvents","sortDays","ms","h","m","s","Math","floor","setEventDurationFormat","openModal","_this4","axios","delete","then","res","refreshEvents","catch","error","console","log","_this5","formatEventsData","dayEvents","i","react_default","a","createElement","className","getHours","getMinutes","isFree","component","onClick","handleEvent","unsubscribeToEvent","sort","b","Component","hourFilter","start","end","filter","Filters","state","textF","type","status","value","hourF","freeF","handleChangeName","handleChangeSelect","handleButton","persist","target","setState","prevState","objectSpread","textFilter","startHour","showFreeEvents","TextField","label","onChange","margin","FormControl","InputLabel","htmlFor","Select","inputProps","MenuItem","Button","variant","AllEvents","original_events","undefined","open","filters","text","hour","free","closeModal","joinToEvent","filterByText","filterByStartHour","filterFreeEvents","setFilters","all","get","spread","data","meid","alert","post","inputText","toLowerCase","eventName","cityName","indexOf","x","y","hourFilterDayChange","defineProperty","applyFilters","values","every","elem","components_Filters","components_FormattedEvents","Fragment","reactjs_popup_es","lockScroll","contentStyle","maxWidth","width","closeOnDocumentClick","close","MyEvents","getMyEvents","length","Navbar","components","navLinks","navbar","item","react_router_dom","activeClassName","to","route","navRoutes","react_router","exact","path","src","logo","alt","App","components_Navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3c70e5c8.chunk.js","sourcesContent":["export const datePrettier = (date: Date) => {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return `${ days[date.getDay()] } ${ date.getDate() } ${ months[date.getMonth()] }`;\n};","import React, { Component } from 'react';\nimport { DicDayEventI, DayEventI, EventI, CityI } from '../helpers/interfaces';\nimport { datePrettier } from '../utils/date-prettier';\nimport axios from 'axios';\nimport '../styles/Events.scss';\n\ninterface FormattedEventsPropsI {\n  events: EventI[];\n  cities?: CityI[],\n  component: string,\n  openModal?: (event: EventI) => void,\n  refreshEvents?: () => void,\n}\n\nclass FormattedEvents extends Component<FormattedEventsPropsI> {\n\n  constructor(props: any) {\n\n    super(props);\n\n    this.setCityEvent = this.setCityEvent.bind(this);\n    this.getEventsDays = this.getEventsDays.bind(this);\n    this.setEventDuration = this.setEventDuration.bind(this);\n    this.dateMeasure = this.dateMeasure.bind(this);\n\n  }\n\n  formatEventsData() {\n\n    let dict: DicDayEventI = {};\n\n    this.props.events.forEach((event: EventI) => {\n\n      event.startDate = new Date(event.startDate);\n\n      const dictKey: string = `${ event.startDate.getDate()}${event.startDate.getMonth()}${event.startDate.getFullYear() }`;\n      const dateFormatted = datePrettier(event.startDate);\n\n      if (!dict[dictKey]) {\n\n        dict[dictKey] = {\n          id: dictKey,\n          date_formatted: dateFormatted,\n          full_date: new Date(`${dateFormatted} ${event.startDate.getFullYear()}`),\n          events: []\n        };\n\n      }\n\n      if (dictKey === dict[dictKey].id) {\n        if (!event.city.name) { this.setCityEvent(event); }\n        if (!event.duration) { this.setEventDuration(event); }\n        dict[dictKey].events.push(event);\n      }\n      \n    });\n\n    return this.sortData(dict);\n\n  }\n\n  setCityEvent(event: EventI) {\n    const city: CityI = this.props.cities!.find((city: CityI) => event.city === city.id)!;\n    if (city) { event.city = city}\n  }\n\n  setEventDuration(event: EventI) {\n    event.duration = this.dateMeasure(new Date(event.endDate).getTime() - new Date(event.startDate).getTime());\n  }\n\n  sortData(dict: DicDayEventI) {\n\n    const items: DayEventI[] = Object.keys(dict).map((key) => {\n      return dict[key];\n    });\n\n    items.forEach((dayEvent: DayEventI) => {\n      this.sortEvents(dayEvent.events);\n    });\n\n    return this.sortDays(items);\n\n  }\n\n  dateMeasure(ms: number) {\n\n    var h, m, s;\n    s = Math.floor(ms / 1000);\n    m = Math.floor(s / 60);\n    s = s % 60;\n    h = Math.floor(m / 60);\n    m = m % 60;\n    h = h % 24;\n  \n    return this.setEventDurationFormat(h, m);\n\n  };\n\n  setEventDurationFormat(h: number, m: number) {\n    if (h === 0) { return m + 'mins'; }\n    if (m === 0) { return h + 'h'; }\n    return `${h}h ${m}mins`\n  }\n\n  handleEvent(event: EventI) {\n    this.props.openModal!(event);\n  }\n\n  unsubscribeToEvent(event: EventI) {\n    axios.delete(`https://5d48447c2d59e50014f209ff.mockapi.io/trivago/my-events/${event.id}`)\n      .then(res => {\n        this.props.refreshEvents!();\n      })\n      .catch(error => console.log(error));\n  }\n\n  getEventsDays() {\n\n    const events = this.formatEventsData();\n\n    return events.map((dayEvents: DayEventI, i) => {\n        \n      return (\n\n        <div className=\"day-events\" key={\"day-events-\" + i}>\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2 className=\"day-title\">{ dayEvents.date_formatted }</h2>\n            </div>\n          </div>\n\n          <div className=\"events-card\">\n            {\n              dayEvents.events.map((event: EventI, i) => {\n\n                return (\n\n                  <div className=\"row event\" key={\"events-\" + i}>\n                    <div className=\"col-md-2 hour\">\n                      <span>{ `${event.startDate.getHours()}:${(event.startDate.getMinutes()<10?'0':'') + event.startDate.getMinutes()}` }</span>\n                    </div>\n                    <div className=\"col-md-7 content\">\n                      <p>{ event.name }<span className=\"free-event ml-3\">{event.isFree ? 'Free' : null}</span></p>\n                      <div className=\"event-details\">\n                        <div className=\"location mr-3\">\n                          <i className=\"fas fa-map-marker-alt\"></i>\n                          <span>{ event.city.name }</span>\n                        </div>\n                        <div className=\"duration\">\n                          <i className=\"fas fa-stopwatch\"></i>\n                          <span>{ event.duration}</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 buttons\">\n                      {\n                        this.props.component === 'All events' ?\n                        <button className=\"btn sign-up\" onClick={this.handleEvent.bind(this, event)}>Sign up</button>\n                        :\n                        <button className=\"btn sign-down\" onClick={this.unsubscribeToEvent.bind(this, event)}>Unsubscribe</button>\n                      }\n                    </div>\n                  </div>\n\n                )\n\n              })\n            }\n          </div>\n        </div>\n\n      )\n\n    })\n\n  }\n\n  sortDays(dayEvents: DayEventI[]) {\n    return dayEvents.sort((a, b) => (a.full_date > b.full_date) ? 1 : ((b.full_date > a.full_date) ? -1 : 0));\n  }\n\n  sortEvents(events: EventI[]) {\n    return events.sort((a, b) => (a.startDate > b.startDate) ? 1 : ((b.startDate > a.startDate) ? -1 : 0));\n  }\n\n\n  render() {\n\n    return (\n      this.getEventsDays()\n    );\n\n  }\n\n}\n\nexport default FormattedEvents;","import { EventI } from '../helpers/interfaces';\n\nexport const hourFilter = (events: EventI[], start: number, end: number) => {\n    return events.filter((event: EventI) => {\n        if ( event.startDate.getHours() >= start && event.startDate.getHours() <= end ) {\n            return event;\n        }\n    });\n};\n\nexport const hourFilterDayChange = (events: EventI[], start: number, end: number) => {\n    const x = events.filter((event: EventI) => event.startDate.getHours() >= start);\n    const y = events.filter((event: EventI) => event.startDate.getHours() <= end);\n    return x.concat(y);\n};","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport '../styles/Filters.scss';\nimport { FormControl, InputLabel, Select, Button, MenuItem } from '@material-ui/core';\n\ninterface FilterPropsI {\n    textFilter: (textF: {type: string, status: boolean, value: string}) => void,\n    startHour: (hourF: {type: string, status: boolean, value: number}) => void,\n    showFreeEvents: (freeF: {type: string, status: boolean}) => void\n}\n\ninterface FilterStateI {\n    textF: {type: string, status: boolean, value: string};\n    hourF: {type: string, status: boolean, value: number};\n    freeF: {type: string, status: boolean}\n}\n\nclass Filters extends Component<FilterPropsI> {\n\n    state: FilterStateI = {\n        textF: {type: 'text', status: false, value: ''},\n        hourF: {type: 'hour', status: false, value: 0},\n        freeF: {type: 'free', status: false}\n    }\n\n    constructor(props: any) {\n\n        super(props);\n\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\n        this.handleButton = this.handleButton.bind(this);\n\n    }\n\n    handleChangeName(event: React.ChangeEvent<HTMLInputElement>) {\n\n        event.persist();\n\n        let status: boolean;\n\n        event.target.value !== '' ? status = true : status = false;\n\n        this.setState((prevState: any) =>\n            ( {textF: {...prevState.textF, status, value: event.target!.value} } ),\n            () => {\n                this.props.textFilter(this.state.textF)\n            });\n\n    }\n\n    handleChangeSelect(event: React.ChangeEvent<{ name?: string; value: unknown }>) {\n\n        let status: boolean;\n\n        event.target.value !== 0 ? status = true : status = false;\n\n        this.setState((prevState: any) =>\n            ( {hourF: {...prevState.hourF, status, value: event.target.value} } ),\n            () => {this.props.startHour(this.state.hourF)});\n\n    }\n\n    handleButton() {\n\n        this.setState((prevState: any) =>\n            ( {freeF: {...prevState.freeF, status: this.state.freeF.status = !this.state.freeF.status} } ),\n            () => {this.props.showFreeEvents(this.state.freeF)});\n\n    }\n\n    render() {\n\n        return(\n            <div className=\"filters-box\" >\n                <div className=\"filters-row\">\n                    \n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Name\"\n                        className=\"tf-name\"\n                        value={this.state.textF.value}\n                        onChange={this.handleChangeName.bind(this)}\n                        margin=\"normal\">\n                    </TextField>\n\n                    <FormControl className=\"fc-select-time\">\n                        <InputLabel htmlFor=\"age-simple\">Start hour</InputLabel>\n                        <Select\n                            value={this.state.hourF.value}\n                            onChange={this.handleChangeSelect.bind(this)}\n                            inputProps={{\n                                name: 'start-hour',\n                                id: 'start-hour'\n                            }}\n                            >\n                            <MenuItem value={0}>Show all</MenuItem>\n                            <MenuItem value={1}>Morning (6am - 12pm)</MenuItem>\n                            <MenuItem value={2}>Afternoon (12pm - 17pm)</MenuItem>\n                            <MenuItem value={3}>Evening (17pm - 21pm)</MenuItem>\n                            <MenuItem value={4}>Night (21pm - 6am)</MenuItem>\n                        </Select>\n                    </FormControl>\n                    \n                    {\n                        !this.state.freeF.status ?\n                        <Button variant=\"contained\" className=\"btn btn-free\" onClick={this.handleButton}>Show free events</Button>\n                        :\n                        <Button variant=\"contained\" className=\"btn btn-all\" onClick={this.handleButton}>Show all events</Button>\n                    }\n\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Popup from \"reactjs-popup\";\nimport { EventI, CityI } from '../helpers/interfaces';\nimport FormattedEvents from '../components/FormattedEvents';\nimport { datePrettier } from '../utils/date-prettier';\nimport { hourFilter, hourFilterDayChange } from '../utils/hour-filter';\nimport Filters from '../components/Filters';\nimport '../styles/Events.scss';\n\nexport interface AllEventsStateI {\n  original_events: EventI[],\n  events: EventI[],\n  cities: CityI[],\n  event?: EventI,\n  open: boolean,\n  filters: {\n    [key: string]: {status: boolean, value?: string | number},\n  }\n}\n\nclass AllEvents extends Component {\n\n  state: AllEventsStateI = {\n    original_events: [],\n    events: [],\n    cities: [],\n    event: undefined,\n    open: false,\n    filters: {\n      text: {status: false, value: ''},\n      hour: {status: false, value: 0},\n      free: {status: false}\n    }\n  }\n\n  constructor(props: any) {\n\n    super(props);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n    this.joinToEvent = this.joinToEvent.bind(this);\n\n    this.filterByText = this.filterByText.bind(this);\n    this.filterByStartHour = this.filterByStartHour.bind(this);\n    this.filterFreeEvents = this.filterFreeEvents.bind(this);\n    this.setFilters = this.setFilters.bind(this);\n\n  }\n\n  componentDidMount() {\n\n    axios.all([\n      axios.get('https://5d48447c2d59e50014f209ff.mockapi.io/trivago/events'),\n      axios.get('https://5d48447c2d59e50014f209ff.mockapi.io/trivago/cities')\n    ]).then(axios.spread((events, cities) => {\n      this.setState({original_events: events.data});\n      this.setState({events: events.data});\n      this.setState({cities: cities.data});\n    }))\n    .catch(error => console.log(error));\n\n  }\n\n  openModal(event: EventI){\n    this.setState({ event, open: true });\n  }\n\n  closeModal() {\n    this.setState({ event: null, open: false });\n  }\n\n  joinToEvent() {\n\n    axios.get(`https://5d48447c2d59e50014f209ff.mockapi.io/trivago/my-events`)\n      .then(res => {\n\n        if ( res.data.find((event: EventI) => event.meid === this.state.event!.id) ) {\n          alert('You are already subscribed to this event');\n        } else {\n\n          const joinedEvent: EventI = this.state.event!;\n          joinedEvent.meid = this.state.event!.id;\n\n          axios.post(`https://5d48447c2d59e50014f209ff.mockapi.io/trivago/my-events`, this.state.event)\n            .then(res => {\n              this.setState({ event: null, open: false });\n            })\n\n        }\n    });\n\n  }\n\n  filterByText(text: string, events: EventI[]) {\n\n    const inputText = text.toLowerCase();\n\n    return events.filter((event: EventI) => {\n\n      const eventName = event.name.toLowerCase();\n      const cityName = event.city.name.toLowerCase();\n\n      if (eventName.indexOf(inputText) !== -1 || cityName.indexOf(inputText) !== -1) {\n        return event;\n      }\n\n    });\n\n  }\n\n  filterByStartHour(value: number, events: EventI[]) {\n    switch(value) {\n      case 1: { return hourFilter(events, 6, 12); }  \n      case 2: { return hourFilter(events, 12, 17); }  \n      case 3: { return hourFilter(events, 17, 21); }  \n      case 4: { return hourFilterDayChange(events, 21, 6); }\n      default: { return events }\n    }\n  }\n\n  filterFreeEvents(events: EventI[]) {\n    return events.filter((event: EventI) => event.isFree);\n  }\n\n  setFilters(filter: {type: string, status: boolean, value?: any}) {\n    this.setState((prevState: any) => \n      ({ filters: {...prevState.filters, [filter.type]: {\n        status: filter.status, value: filter.value }} \n      }),\n      () => this.applyFilters()\n    );\n  }\n\n  applyFilters() {\n\n    if ( Object.values(this.state.filters).every((elem: any) => elem.status === false) ) {\n\n      this.setState({ events: this.state.original_events });\n\n    } else {\n\n      let events: EventI[] = this.state.original_events;\n      \n      if (this.state.filters.text.status) {\n        events = this.filterByText( (this.state.filters.text.value as string), events);\n      }\n      if (this.state.filters.hour.status) {\n        events = this.filterByStartHour((this.state.filters.hour.value as number), events);\n      }\n      if (this.state.filters.free.status) {\n        events = this.filterFreeEvents(events);\n      }\n\n      this.setState({events});\n\n    }\n\n  }\n\n\n  render() {\n\n    const contentStyle = {\n        maxWidth: \"800px\",\n        width: \"90%\"\n    };\n\n    return [\n\n      <div className=\"container\">\n\n        <div className=\"row mb-5\">\n          <Filters\n            textFilter={this.setFilters}\n            startHour={this.setFilters}\n            showFreeEvents={this.setFilters}>\n          </Filters>\n        </div>\n\n        <FormattedEvents\n          events={this.state.events}\n          cities={this.state.cities}\n          component={'All events'}\n          openModal={this.openModal}>\n        </FormattedEvents>\n\n      </div>\n      \n      ,\n\n      <React.Fragment>\n          <Popup key=\"popup\" open={this.state.open} lockScroll contentStyle={contentStyle} closeOnDocumentClick={false}>\n              {close => (                        \n                <div className=\"react-modal\">\n                  <div className=\"react-modal-header\">\n                    <span>Join the event</span>\n                    <button onClick={this.closeModal} className=\"close-btn\">\n                      <i className=\"fas fa-times\"></i>\n                    </button>\n                  </div>\n                  <div className=\"react-modal-body\">\n                    <div className=\"modal-text\">\n                      <p className=\"react-modal-description\">\n                        You are about to sign up for <b>{this.state.event!.name}</b>.\n                        This event takes place the {datePrettier(this.state.event!.startDate)} in {this.state.event!.city.name}.\n                      </p>\n                      <p>Are you sure?</p>\n                    </div>\n                  </div>\n                  <div className=\"react-modal-footer\">\n                    <button className=\"btn mr-3\" onClick={this.closeModal}>Cancel</button>\n                    <button className=\"btn\" onClick={this.joinToEvent}>Join</button>\n                  </div>\n                </div>\n              )}\n          </Popup>\n      </React.Fragment>\n\n    ];\n\n  }\n\n}\n\nexport default AllEvents;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport FormattedEvents from '../components/FormattedEvents';\nimport '../styles/Events.scss';\n\nclass MyEvents extends Component {\n\n  state = {\n    events: [],\n  }\n\n  componentDidMount() {\n    this.getMyEvents();\n  }\n\n  getMyEvents() {\n    axios.get(`https://5d48447c2d59e50014f209ff.mockapi.io/trivago/my-events`)\n      .then(res => {\n        this.setState({ events: res.data });\n      })\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        {\n          this.state.events.length > 0 ?\n            <FormattedEvents\n            events={this.state.events}\n            component={'My events'}\n            refreshEvents={this.getMyEvents.bind(this)}>\n          </FormattedEvents>\n          :\n          <div className=\"no-events\">\n            <span>You are not subscribed to any event</span>\n          </div>\n        }\n      </div>\n    );\n\n  }\n\n}\n\nexport default MyEvents;\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, NavLink , Switch } from 'react-router-dom'\nimport AllEvents from '../pages/AllEvents';\nimport MyEvents from '../pages/MyEvents';\nimport  { navbar } from '../data/navbar.json';\nimport logo from '../logo.svg';\nimport '../styles/Navbar.scss';\n\nclass Navbar extends Component {\n\n  render() {\n\n    const components = [AllEvents, MyEvents]\n\n    const navLinks = navbar.map((item, i) => {\n      return (\n        <NavLink key={\"navlink-\" + i} className=\"nav-item\" activeClassName=\"active\" to={item.route}>{item.name}</NavLink >\n      )\n    });\n\n    const navRoutes = navbar.map((item, i) => {\n      return (\n        <Route key={\"route-\" + i} exact path={item.route} component={components[i]} />\n      )\n    });\n\n    return (\n      <Router>\n        <div className=\"header\">\n          <img className=\"logo\" src={logo} alt=\"Logo\" />\n          <div className=\"container\">\n            <nav className=\"nav\">\n              { navLinks }\n            </nav>\n          </div>\n        </div>\n        <Switch>\n          <React.Fragment>\n            <div className=\"main-wrapper mt-4 mb-4\">\n              { navRoutes }\n            </div>\n          </React.Fragment>\n        </Switch>\n      </Router>\n  \n    );\n\n  }\n\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\nimport Navbar from './components/Navbar';\nimport './styles/App.scss';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8e68c54d.svg\";"],"sourceRoot":""}